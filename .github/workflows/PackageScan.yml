name: 'Package Scan'
on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repo URL to scan'     
        required: true

permissions:
  contents: read

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

# trivy scan IaC and secrets
  trivy:
    name: Trivy vuln
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository:  ${{ github.event.inputs.repo }}

      - name: Run Trivy vulnerability
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'json'
          security-checks: 'vuln'
          output: 'trivy-vulns.json'
    
      - name: Archive Trivy results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-vulns.json
          if-no-files-found: ignore

      - name: Run Trivy vulnerability
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'cyclonedx'
          security-checks: 'vuln'
          output: 'trivy-results.cdx.json'
    
      - name: Archive Trivy results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-results.cdx.json
          if-no-files-found: ignore

      - name: Run Trivy secret
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'json'
          security-checks: 'secret'
          output: 'trivy-secrets.json'
      
      - name: Archive Trivy results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-secrets.json
          if-no-files-found: ignore
          
      - name: Run Trivy config
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'json'
          security-checks: 'config'
          output: 'trivy-config.json'
      
      - name: Archive Trivy results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-config.json
          if-no-files-found: ignore
          
    #SCA Vulnerabilty scaneer OSV scanner       
  osv-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository:  ${{ github.event.inputs.repo }}
      
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
      
      - name: check go version
        id: osvscan
        run: |
          go install github.com/google/osv-scanner/cmd/osv-scanner@v1
          export PATH=${PATH}:`go env GOPATH`/bin
          echo $(osv-scanner --json -r .) > osvscan.json 
      
      - name: Archive osv results
        uses: actions/upload-artifact@v3
        with:
          name: osv-scan
          path: osvscan.json
          if-no-files-found: ignore
          
      - name: summary
        run: |
          echo -e $(cat osvscan.json) >> $GITHUB_STEP_SUMMARY
